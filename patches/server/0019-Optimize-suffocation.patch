From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tofik=20=E2=99=A1?= <slodkitofiK@gmail.com>
Date: Sat, 14 Dec 2024 05:39:45 +0100
Subject: [PATCH] Optimize suffocation


diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 73af15d18180b4df3fa0614b323f2397f5543db5..4d0a95ca6e8da302d3353fcd6cc943939a8d18e2 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -480,7 +480,9 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
             if (world1 instanceof ServerLevel) {
                 worldserver1 = (ServerLevel) world1;
-                if (this.isInWall()) {
+                // Mizi - optimize suffocation
+                // if (this.isInWall()) { 
+                if ((tickCount % 10 == 0 && couldPossiblyBeHurt(1.0F)) && this.isInWall()) {
                     this.hurtServer(worldserver1, this.damageSources().inWall(), 1.0F);
                 } else if (flag && !this.level().getWorldBorder().isWithinBounds(this.getBoundingBox())) {
                     double d1 = this.level().getWorldBorder().getDistanceToBorder(this) + this.level().getWorldBorder().getDamageSafeZone();
@@ -1455,6 +1457,15 @@ public abstract class LivingEntity extends Entity implements Attackable {
     public boolean isDeadOrDying() {
         return this.getHealth() <= 0.0F;
     }
+    // Mizi start - optimize suffocation
+    public boolean couldPossiblyBeHurt(float amount) {
+        if ((float) this.invulnerableTime > (float) this.invulnerableDuration / 2.0F && amount <= this.lastHurt) {
+            return false;
+        }
+        return true;
+    }
+    // Mizi end
+
 
     @Override
     public boolean hurtServer(ServerLevel world, DamageSource source, float amount) {
